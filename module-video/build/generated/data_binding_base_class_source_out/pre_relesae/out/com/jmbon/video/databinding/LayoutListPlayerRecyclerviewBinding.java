// Generated by view binder compiler. Do not edit!
package com.jmbon.video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.allen.library.shape.ShapeTextView;
import com.jmbon.video.R;
import com.jmbon.video.view.RecyclerViewEmptySupport;
import com.scwang.smart.refresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutListPlayerRecyclerviewBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final RecyclerViewEmptySupport listPlayerRecyclerview;

  @NonNull
  public final SmartRefreshLayout refreshView;

  @NonNull
  public final RelativeLayout rlEmptyView;

  @NonNull
  public final ShapeTextView tvRefresh;

  private LayoutListPlayerRecyclerviewBinding(@NonNull View rootView,
      @NonNull RecyclerViewEmptySupport listPlayerRecyclerview,
      @NonNull SmartRefreshLayout refreshView, @NonNull RelativeLayout rlEmptyView,
      @NonNull ShapeTextView tvRefresh) {
    this.rootView = rootView;
    this.listPlayerRecyclerview = listPlayerRecyclerview;
    this.refreshView = refreshView;
    this.rlEmptyView = rlEmptyView;
    this.tvRefresh = tvRefresh;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutListPlayerRecyclerviewBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.layout_list_player_recyclerview, parent);
    return bind(parent);
  }

  @NonNull
  public static LayoutListPlayerRecyclerviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.list_player_recyclerview;
      RecyclerViewEmptySupport listPlayerRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (listPlayerRecyclerview == null) {
        break missingId;
      }

      id = R.id.refresh_view;
      SmartRefreshLayout refreshView = ViewBindings.findChildViewById(rootView, id);
      if (refreshView == null) {
        break missingId;
      }

      id = R.id.rl_empty_view;
      RelativeLayout rlEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (rlEmptyView == null) {
        break missingId;
      }

      id = R.id.tv_refresh;
      ShapeTextView tvRefresh = ViewBindings.findChildViewById(rootView, id);
      if (tvRefresh == null) {
        break missingId;
      }

      return new LayoutListPlayerRecyclerviewBinding(rootView, listPlayerRecyclerview, refreshView,
          rlEmptyView, tvRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
