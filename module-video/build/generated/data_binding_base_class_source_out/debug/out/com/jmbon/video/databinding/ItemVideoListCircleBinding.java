// Generated by view binder compiler. Do not edit!
package com.jmbon.video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.jmbon.video.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoListCircleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ShapeableImageView imageCircleCover1;

  @NonNull
  public final ShapeableImageView imageCircleCover2;

  @NonNull
  public final ShapeableImageView imageCircleCover3;

  @NonNull
  public final ShapeableImageView imageColor;

  @NonNull
  public final View imageOverlay;

  @NonNull
  public final LinearLayout llLeft;

  @NonNull
  public final LinearLayout llRight;

  @NonNull
  public final TextView textCircle;

  @NonNull
  public final TextView textCircleDesc;

  @NonNull
  public final TextView textCircleName;

  @NonNull
  public final TextView textDiscuss;

  private ItemVideoListCircleBinding(@NonNull MaterialCardView rootView,
      @NonNull ShapeableImageView imageCircleCover1, @NonNull ShapeableImageView imageCircleCover2,
      @NonNull ShapeableImageView imageCircleCover3, @NonNull ShapeableImageView imageColor,
      @NonNull View imageOverlay, @NonNull LinearLayout llLeft, @NonNull LinearLayout llRight,
      @NonNull TextView textCircle, @NonNull TextView textCircleDesc,
      @NonNull TextView textCircleName, @NonNull TextView textDiscuss) {
    this.rootView = rootView;
    this.imageCircleCover1 = imageCircleCover1;
    this.imageCircleCover2 = imageCircleCover2;
    this.imageCircleCover3 = imageCircleCover3;
    this.imageColor = imageColor;
    this.imageOverlay = imageOverlay;
    this.llLeft = llLeft;
    this.llRight = llRight;
    this.textCircle = textCircle;
    this.textCircleDesc = textCircleDesc;
    this.textCircleName = textCircleName;
    this.textDiscuss = textDiscuss;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoListCircleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoListCircleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video_list_circle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoListCircleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageCircleCover1;
      ShapeableImageView imageCircleCover1 = ViewBindings.findChildViewById(rootView, id);
      if (imageCircleCover1 == null) {
        break missingId;
      }

      id = R.id.imageCircleCover2;
      ShapeableImageView imageCircleCover2 = ViewBindings.findChildViewById(rootView, id);
      if (imageCircleCover2 == null) {
        break missingId;
      }

      id = R.id.imageCircleCover3;
      ShapeableImageView imageCircleCover3 = ViewBindings.findChildViewById(rootView, id);
      if (imageCircleCover3 == null) {
        break missingId;
      }

      id = R.id.imageColor;
      ShapeableImageView imageColor = ViewBindings.findChildViewById(rootView, id);
      if (imageColor == null) {
        break missingId;
      }

      id = R.id.imageOverlay;
      View imageOverlay = ViewBindings.findChildViewById(rootView, id);
      if (imageOverlay == null) {
        break missingId;
      }

      id = R.id.llLeft;
      LinearLayout llLeft = ViewBindings.findChildViewById(rootView, id);
      if (llLeft == null) {
        break missingId;
      }

      id = R.id.llRight;
      LinearLayout llRight = ViewBindings.findChildViewById(rootView, id);
      if (llRight == null) {
        break missingId;
      }

      id = R.id.textCircle;
      TextView textCircle = ViewBindings.findChildViewById(rootView, id);
      if (textCircle == null) {
        break missingId;
      }

      id = R.id.textCircleDesc;
      TextView textCircleDesc = ViewBindings.findChildViewById(rootView, id);
      if (textCircleDesc == null) {
        break missingId;
      }

      id = R.id.textCircleName;
      TextView textCircleName = ViewBindings.findChildViewById(rootView, id);
      if (textCircleName == null) {
        break missingId;
      }

      id = R.id.textDiscuss;
      TextView textDiscuss = ViewBindings.findChildViewById(rootView, id);
      if (textDiscuss == null) {
        break missingId;
      }

      return new ItemVideoListCircleBinding((MaterialCardView) rootView, imageCircleCover1,
          imageCircleCover2, imageCircleCover3, imageColor, imageOverlay, llLeft, llRight,
          textCircle, textCircleDesc, textCircleName, textDiscuss);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
