// Generated by view binder compiler. Do not edit!
package com.jmbon.video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.jmbon.video.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVideoListVideoBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView imageAvatar;

  @NonNull
  public final ImageView imageCover;

  @NonNull
  public final TextView textAD;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textPlayCount;

  @NonNull
  public final TextView textVideoDesc;

  private ItemVideoListVideoBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView imageAvatar, @NonNull ImageView imageCover, @NonNull TextView textAD,
      @NonNull TextView textName, @NonNull TextView textPlayCount,
      @NonNull TextView textVideoDesc) {
    this.rootView = rootView;
    this.imageAvatar = imageAvatar;
    this.imageCover = imageCover;
    this.textAD = textAD;
    this.textName = textName;
    this.textPlayCount = textPlayCount;
    this.textVideoDesc = textVideoDesc;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVideoListVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVideoListVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_video_list_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVideoListVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageAvatar;
      ImageView imageAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageAvatar == null) {
        break missingId;
      }

      id = R.id.imageCover;
      ImageView imageCover = ViewBindings.findChildViewById(rootView, id);
      if (imageCover == null) {
        break missingId;
      }

      id = R.id.textAD;
      TextView textAD = ViewBindings.findChildViewById(rootView, id);
      if (textAD == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.textPlayCount;
      TextView textPlayCount = ViewBindings.findChildViewById(rootView, id);
      if (textPlayCount == null) {
        break missingId;
      }

      id = R.id.textVideoDesc;
      TextView textVideoDesc = ViewBindings.findChildViewById(rootView, id);
      if (textVideoDesc == null) {
        break missingId;
      }

      return new ItemVideoListVideoBinding((MaterialCardView) rootView, imageAvatar, imageCover,
          textAD, textName, textPlayCount, textVideoDesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
